name: Export Reflex Project
description: Export a Reflex project with a cache
inputs:
  args:
    description: Arguments to `reflex export`.
    required: false
  project-root:
    description: The root of your Reflex project, if not the current working directory.
    required: false
    default: .

runs:
  using: composite
  steps:
    - name: Fail on Windows
      if: ${{ runner.os == 'Windows' }}
      shell: bash
      run: |
        echo "::error::This action does not currently support Windows runners."
        exit 1

    - name: Save Environment Variables
      uses: gacts/run-and-post-run@v1
      with:
        run: cat ${GITHUB_ENV} > ${{ runner.temp }}/.reflex-export-github-env
        post: cat ${{ runner.temp }}/.reflex-export-github-env > ${GITHUB_ENV}

    - name: Set Working Directory
      shell: bash
      run: echo REFLEX_EXPORT_CWD=$(realpath ${{ inputs.project-root }}) >> ${GITHUB_ENV}

    - name: Set Up uv
      uses: astral-sh/setup-uv@v4

    - name: Add Virtual Environment to System Path
      shell: bash
      if: ${{ runner.os == 'skip' }}
      run: |
        cat ${GITHUB_PATH} > ${{ runner.temp }}/.original-path
        
        if [ -f "poetry.lock" ]; then
          venv=$(dirname $(poetry env info --executable))
        elif [ -d ".venv/bin" ]; then
          venv=$(realpath .venv/bin)
        fi
        
        if [ -n ${venv} ]; then
          echo "${venv}:${PATH}" > ${GITHUB_PATH}
        fi
      working-directory: ${{ env.REFLEX_EXPORT_CWD }}

    - name: Check Project Root
      shell: bash
      run: |
        if [ ! -f rxconfig.py ]; then
          echo "::error::It doesn't look like this directory is the root of a Reflex project. Maybe you should've passed project-root?"
          exit 1
        fi
      working-directory: ${{ env.REFLEX_EXPORT_CWD }}

    - name: Get Web Directory
      id: web
      shell: uv run python {0}
      run: |
        import os
        from reflex.utils.prerequisites import get_web_dir
        
        print(f"web={get_web_dir().absolute()}", file=open(os.getenv("GITHUB_OUTPUT"), "a"))
      working-directory: ${{ env.REFLEX_EXPORT_CWD }}

    - name: Get Cache Key I
      id: key-1
      shell: bash
      run: uv run ${{ github.action_path }}/key.py
      working-directory: ${{ env.REFLEX_EXPORT_CWD }}

    - name: Restore Cache
      uses: actions/cache/restore@v4
      with:
        path: ${{ steps.web.outputs.web }}
        key: ${{ steps.key-1.outputs.key }}

    - name: Export Project
      shell: bash
      run: uv run reflex export ${{ inputs.args }}
      working-directory: ${{ env.REFLEX_EXPORT_CWD }}
      env:
        LOGLEVEL: ${{ env.LOGLEVEL || runner.debug && 'debug' || 'default' }}

    - name: Get Cache Key II
      id: key-2
      shell: bash
      run: uv run ${{ github.action_path }}/key.py
      working-directory: ${{ env.REFLEX_EXPORT_CWD }}

    - name: Save Cache
      uses: actions/cache/save@v4
      with:
        path: ${{ steps.web.outputs.web }}
        key: ${{ steps.key-2.outputs.key }}

    - name: Restore System Path
      if: ${{ runner.os == 'skip' }}
      shell: bash
      run: cat ${{ runner.temp }}/.original-path > ${GITHUB_PATH}
